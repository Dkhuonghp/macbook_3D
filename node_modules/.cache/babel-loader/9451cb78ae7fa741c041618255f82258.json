{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateGrammar = exports.resolveGrammar = void 0;\n\nvar forEach_1 = __importDefault(require(\"lodash/forEach\"));\n\nvar defaults_1 = __importDefault(require(\"lodash/defaults\"));\n\nvar resolver_1 = require(\"../resolver\");\n\nvar checks_1 = require(\"../checks\");\n\nvar errors_public_1 = require(\"../../errors_public\");\n\nfunction resolveGrammar(options) {\n  var actualOptions = (0, defaults_1.default)(options, {\n    errMsgProvider: errors_public_1.defaultGrammarResolverErrorProvider\n  });\n  var topRulesTable = {};\n  (0, forEach_1.default)(options.rules, function (rule) {\n    topRulesTable[rule.name] = rule;\n  });\n  return (0, resolver_1.resolveGrammar)(topRulesTable, actualOptions.errMsgProvider);\n}\n\nexports.resolveGrammar = resolveGrammar;\n\nfunction validateGrammar(options) {\n  options = (0, defaults_1.default)(options, {\n    errMsgProvider: errors_public_1.defaultGrammarValidatorErrorProvider\n  });\n  return (0, checks_1.validateGrammar)(options.rules, options.maxLookahead, options.tokenTypes, options.errMsgProvider, options.grammarName);\n}\n\nexports.validateGrammar = validateGrammar;","map":{"version":3,"mappings":";;;;;;;;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AAeA,SAAgBA,cAAhB,CACEC,OADF,EAC6B;EAE3B,IAAMC,aAAa,GAAiC,wBAASD,OAAT,EAAkB;IACpEE,cAAc,EAAEC;EADoD,CAAlB,CAApD;EAIA,IAAMC,aAAa,GAAiC,EAApD;EACA,uBAAQJ,OAAO,CAACK,KAAhB,EAAuB,UAACC,IAAD,EAAK;IAC1BF,aAAa,CAACE,IAAI,CAACC,IAAN,CAAb,GAA2BD,IAA3B;EACD,CAFD;EAGA,OAAO,+BAAkBF,aAAlB,EAAiCH,aAAa,CAACC,cAA/C,CAAP;AACD;;AAZDM;;AAcA,SAAgBC,eAAhB,CAAgCT,OAAhC,EAMC;EACCA,OAAO,GAAG,wBAASA,OAAT,EAAkB;IAC1BE,cAAc,EAAEC;EADU,CAAlB,CAAV;EAIA,OAAO,8BACLH,OAAO,CAACK,KADH,EAELL,OAAO,CAACU,YAFH,EAGLV,OAAO,CAACW,UAHH,EAILX,OAAO,CAACE,cAJH,EAKLF,OAAO,CAACY,WALH,CAAP;AAOD;;AAlBDJ","names":["resolveGrammar","options","actualOptions","errMsgProvider","errors_public_1","topRulesTable","rules","rule","name","exports","validateGrammar","maxLookahead","tokenTypes","grammarName"],"sourceRoot":"","sources":["../../../../../src/parse/grammar/gast/gast_resolver_public.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}